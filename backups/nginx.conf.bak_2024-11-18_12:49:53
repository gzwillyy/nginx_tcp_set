user www www;
worker_processes auto;
error_log  /www/wwwlogs/nginx_error.log  crit;
pid        /www/server/nginx/logs/nginx.pid;
worker_rlimit_nofile 51200;

stream {
    log_format tcp_format '$time_local|$remote_addr|$protocol|$status|$bytes_sent|$bytes_received|$session_time|$upstream_addr|$upstream_bytes_sent|$upstream_bytes_received|$upstream_connect_time';

    upstream backend_servers {
        server 103.93.126.97:42124;
        server 303.93.126.97:42124;
    }

    server {
        listen 25125;  # 普通 TCP 负载均衡监听端口
        proxy_pass backend_servers;  # 转发到后端服务器

        # TCP 代理超时设置
        proxy_timeout 1m;  # 设置代理的超时时间
        proxy_connect_timeout 2s;  # 设置连接后端的超时时间
        tcp_nodelay on;  # 启用 TCP_NODELAY，避免延迟

        # 启用代理缓冲区
        proxy_buffer_size 16k;  # 设置初始缓冲区大小
    }

    # 带证书的 TLS 加密的 TCP 负载均衡 for 127.0.0.1:42124
    server {
        listen 127.0.0.1:42124 ssl fastopen=256;  # 启用 SSL/TLS 加密
        proxy_pass backend_servers;  # 转发到后端服务器

        # SSL 配置部分
        ssl_certificate ./cert/127.0.0.1.crt;  # 证书路径
        ssl_certificate_key ./cert/127.0.0.1.key;  # 私钥路径
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_protocols TLSv1.2 TLSv1.3;  # 确保启用 TLS 1.2 和 TLS 1.3
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    }

    # 带证书的 TLS 加密的 TCP 负载均衡 for 127.0.0.2:42133
    server {
        listen 127.0.0.2:42133 ssl fastopen=256;  # 启用 SSL/TLS 加密
        proxy_pass backend_servers;  # 转发到后端服务器

        # SSL 配置部分
        ssl_certificate ./cert/127.0.0.2.crt;  # 证书路径
        ssl_certificate_key ./cert/127.0.0.2.key;  # 私钥路径
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_protocols TLSv1.2 TLSv1.3;  # 确保启用 TLS 1.2 和 TLS 1.3
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    }

}

