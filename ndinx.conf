user  www www;
worker_processes auto;
error_log  /www/wwwlogs/nginx_error.log  crit;
pid        /www/server/nginx/logs/nginx.pid;
worker_rlimit_nofile 51200;

stream {
    log_format tcp_format '$time_local|$remote_addr|$protocol|$status|$bytes_sent|$bytes_received|$session_time|$upstream_addr|$upstream_bytes_sent|$upstream_bytes_received|$upstream_connect_time';
    # TCP服务器池
    upstream backend_servers {
        # ip_hash;
        server 17.211.65.94:25125;
        server 603.93.126.97:25125;
        # 更多服务器可以在此添加
    }

    lua_shared_dict cert_cache 20m;  # 动态证书缓存

    # 不加密的 TCP 负载均衡
    server {
        listen 25125;  # 普通 TCP 负载均衡监听端口
        proxy_pass backend_servers;  # 转发到后端服务器
        # TCP 代理超时设置
        proxy_timeout 1m;  # 设置代理的超时时间，避免长时间未响应的连接
        proxy_connect_timeout 2s;  # 设置连接后端的超时时间
        tcp_nodelay on;  # 启用 TCP_NODELAY，避免延迟
        # 启用代理缓冲区，避免过多的网络延迟
        proxy_buffer_size 16k;  # 设置初始缓冲区大小
    }

    # 带证书的 TLS 加密的 TCP 负载均衡
    server {
        listen 25126 ssl fastopen=256;  # 启用 SSL/TLS 加密
        proxy_pass backend_servers;  # 转发到后端服务器

        # 允许读取 SNI 信息
        ssl_preread on;

        # 动态加载证书
        ssl_certificate_by_lua_file /www/server/nginx/lib/lua/dynamic_tls.lua;
        ssl_certificate_by_lua_block {
            require("dynamic_tls").load_cert()
        }

        # SSL 配置部分
        ssl_certificate /www/server/panel/vhost/cert/127.0.0.1.crt;  # 证书路径
        ssl_certificate_key /www/server/panel/vhost/cert/127.0.0.1.key;  # 私钥路径
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_protocols TLSv1.2 TLSv1.3;  # 确保启用 TLS 1.2 和 TLS 1.3
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-CHACHA20-POLY1305';  # 添加 CHACHA20 套件


        ssl_prefer_server_ciphers on;
        ssl_verify_client off;  # 关闭客户端证书验证，如果需要开启，请调整配置

        # TCP 代理超时设置
        proxy_timeout 1m;  # 设置代理的超时时间，避免长时间未响应的连接
        proxy_connect_timeout 2s;  # 设置连接后端的超时时间
        tcp_nodelay on;  # 启用 TCP_NODELAY，避免延迟

        # 启用代理缓冲区，避免过多的网络延迟
        proxy_buffer_size 16k;  # 设置初始缓冲区大小

    }

    access_log /www/wwwlogs/tcp-access.log tcp_format;
    error_log /www/wwwlogs/tcp-error.log;
    include /www/server/panel/vhost/nginx/tcp/*.conf;
}

events
    {
        use epoll;
        worker_connections 51200;
        multi_accept on;
    }

http
    {
        include       mime.types;
		#include luawaf.conf;

		include proxy.conf;
        lua_package_path "/www/server/nginx/lib/lua/?.lua;;";

        default_type  application/octet-stream;

        server_names_hash_bucket_size 512;
        client_header_buffer_size 32k;
        large_client_header_buffers 4 32k;
        client_max_body_size 50m;

        sendfile   on;
        tcp_nopush on;

        keepalive_timeout 60;

        tcp_nodelay on;

        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 256k;
		fastcgi_intercept_errors on;

        gzip on;
        gzip_min_length  1k;
        gzip_buffers     4 16k;
        gzip_http_version 1.1;
        gzip_comp_level 2;
        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/json image/jpeg image/gif image/png font/ttf font/otf image/svg+xml application/xml+rss text/x-js;
        gzip_vary on;
        gzip_proxied   expired no-cache no-store private auth;
        gzip_disable   "MSIE [1-6]\.";

        limit_conn_zone $binary_remote_addr zone=perip:10m;
		limit_conn_zone $server_name zone=perserver:10m;

        server_tokens off;
        access_log /www/wwwlogs/access.log;  # 设置日志输出

server
    {
        listen 888;
        server_name phpmyadmin;
        index index.html index.htm index.php;
        root  /www/server/phpmyadmin;

        #error_page   404   /404.html;
        include enable-php.conf;

        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
        {
            expires      30d;
        }

        location ~ .*\.(js|css)?$
        {
            expires      12h;
        }

        location ~ /\.
        {
            deny all;
        }

        access_log  /www/wwwlogs/access.log;
    }
include /www/server/panel/vhost/nginx/*.conf;
}

